"""
This type stub file was generated by pyright.
"""

import os.path
from typing import List
import unicodedata
import pycountry.db

"""pycountry"""
LOCALES_DIR = ...
DATABASE_DIR = ...
def remove_accents(input_str): # -> str:
    ...

class ExistingCountries(pycountry.db.Database):
    """Provides access to an ISO 3166 database (Countries)."""
    data_class_name: str = ...
    root_key: str = ...
    def search_fuzzy(self, query: str) -> List[pycountry.db.Data]:
        ...
    


class HistoricCountries(ExistingCountries):
    """Provides access to an ISO 3166-3 database
    (Countries that have been removed from the standard)."""
    data_class_name = ...
    root_key = ...


class Scripts(pycountry.db.Database):
    """Provides access to an ISO 15924 database (Scripts)."""
    data_class_name = ...
    root_key = ...


class Currencies(pycountry.db.Database):
    """Provides access to an ISO 4217 database (Currencies)."""
    data_class_name = ...
    root_key = ...


class Languages(pycountry.db.Database):
    """Provides access to an ISO 639-1/2T/3 database (Languages)."""
    no_index = ...
    data_class_name = ...
    root_key = ...


class LanguageFamilies(pycountry.db.Database):
    """Provides access to an ISO 639-5 database
    (Language Families and Groups)."""
    data_class_name = ...
    root_key = ...


class Subdivision(pycountry.db.Data):
    def __init__(self, **kw) -> None:
        ...
    
    @property
    def country(self):
        ...
    
    @property
    def parent(self): # -> list[Unknown] | None:
        ...
    


class Subdivisions(pycountry.db.Database):
    data_class_base = Subdivision
    data_class_name = ...
    no_index = ...
    root_key = ...
    def get(self, **kw): # -> list[Unknown]:
        ...
    


countries: ExistingCountries = ...
subdivisions = ...
historic_countries = ...
currencies = ...
languages = ...
language_families = ...
scripts = ...
